{"meta":{"title":"wonderful的自由空间","subtitle":"机遇总是留给有准备之人","description":"好的机遇总是留给有准备之人","author":"xiexin","url":"https://wonderfulxin.github.io"},"pages":[],"posts":[{"title":"面试经验","slug":"face-experience","date":"2016-12-23T14:37:23.000Z","updated":"2016-12-23T07:54:06.975Z","comments":true,"path":"2016/12/23/face-experience/","link":"","permalink":"https://wonderfulxin.github.io/2016/12/23/face-experience/","excerpt":"摘要:安卓面试经验","text":"摘要:安卓面试经验正文:我的第一篇","categories":[{"name":"日志","slug":"日志","permalink":"https://wonderfulxin.github.io/categories/日志/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://wonderfulxin.github.io/tags/其他/"}]},{"title":"压缩图片单例Util","slug":"ZipUtil","date":"2016-12-23T03:35:00.000Z","updated":"2016-12-23T07:54:13.873Z","comments":true,"path":"2016/12/23/ZipUtil/","link":"","permalink":"https://wonderfulxin.github.io/2016/12/23/ZipUtil/","excerpt":"摘要:压缩图片的工具类，内存经常由于图片占用空间大而内存溢出，有了这个压缩最起码会好好多。","text":"摘要:压缩图片的工具类，内存经常由于图片占用空间大而内存溢出，有了这个压缩最起码会好好多。public class ZipUtil {private static ZipUtil instance;private ZipUtil() {}public static synchronized ZipUtil getInstance() {if (instance == null) { instance = new ZipUtil();} return instance;}private File compressImage(Bitmap image) { ByteArrayOutputStream baos = new ByteArrayOutputStream(); image.compress(Bitmap.CompressFormat.JPEG, 100, baos);//质量压缩方法，这里100表示 不压缩，把压缩后的数据存放到baos中 int options = 100; while ( baos.toByteArray().length / 1024&gt;200) { //循环判断如果压缩后图片是否大于200kb,大于继续压缩 baos.reset();//重置baos即清空baos image.compress(Bitmap.CompressFormat.JPEG, options, baos);//这里压缩options%，把压缩后的数据存放到baos中 options -= 10;//每次都减少10 }// ByteArrayInputStream isBm = new ByteArrayInputStream(baos.toByteArray());//把压缩后的数据baos存放到ByteArrayInputStream中// Bitmap bitmap = BitmapFactory.decodeStream(isBm, null, null);//把ByteArrayInputStream数据生成图片 new DateFormat(); String name = DateFormat.format(“yyyyMMdd_hhmmss”,Calendar.getInstance(Locale.CHINA)) + “.JPEG”; File f = new File( “/sdcard/Image/“+name); try { FileOutputStream fos = new FileOutputStream(f); fos.write(baos.toByteArray()); fos.flush(); fos.close(); } catch (Exception e) { e.printStackTrace(); } return f; }public File getimage(String srcPath) { BitmapFactory.Options newOpts = new BitmapFactory.Options(); //开始读入图片，此时把options.inJustDecodeBounds 设回true了 newOpts.inJustDecodeBounds = true; Bitmap bitmap = BitmapFactory.decodeFile(srcPath,newOpts);//此时返回bm为空 newOpts.inJustDecodeBounds = false; int w = newOpts.outWidth; int h = newOpts.outHeight; //现在主流手机比较多是800*480分辨率，所以高和宽我们设置为 float hh = 800f;//这里设置高度为800f float ww = 480f;//这里设置宽度为480f //缩放比。由于是固定比例缩放，只用高或者宽其中一个数据进行计算即可 int be = 1;//be=1表示不缩放 if (w &gt; h &amp;&amp; w &gt; ww) {//如果宽度大的话根据宽度固定大小缩放 be = (int) (newOpts.outWidth / ww); } else if (w &lt; h &amp;&amp; h &gt; hh) {//如果高度高的话根据宽度固定大小缩放 be = (int) (newOpts.outHeight / hh); } if (be &lt;= 0) be = 1; newOpts.inSampleSize = be;//设置缩放比例 //重新读入图片，注意此时已经把options.inJustDecodeBounds 设回false了 bitmap = BitmapFactory.decodeFile(srcPath, newOpts); return compressImage(bitmap);//压缩好比例大小后再进行质量压缩 }}","categories":[],"tags":[{"name":"安卓","slug":"安卓","permalink":"https://wonderfulxin.github.io/tags/安卓/"}]},{"title":"html传参数乱码","slug":"传参数乱码","date":"2016-12-23T03:35:00.000Z","updated":"2017-01-09T03:41:53.653Z","comments":true,"path":"2016/12/23/传参数乱码/","link":"","permalink":"https://wonderfulxin.github.io/2016/12/23/传参数乱码/","excerpt":"摘要:有时候会遇到传H5参数会乱码，就是一个页面用get方法带去参数，之后在另外一个页面获取参数会乱码，顺便写出获取参数的方法","text":"摘要:有时候会遇到传H5参数会乱码，就是一个页面用get方法带去参数，之后在另外一个页面获取参数会乱码，顺便写出获取参数的方法//获取参数的方法function getQueryString(name) { var reg = new RegExp(“(^|&amp;)” + name + “=([^&amp;]*)(&amp;|$)”, “i”); var r = window.location.search.substr(1).match(reg); if (r != null) return unescape(r[2]); return null;}在一个URL带上参数例如：http://127.0.0.1:8020/index.html?id=205&amp;department=部门但是这个中文会乱码，在获取的时候，这个时候我们要先给部门两个中文字先encode 之后再获取的时候再解码：index.html?id=’+id+’&amp;department=’+escape(department)+’然后获取的时候就直接unescape(getQueryString(‘department’)) 获取出来的就不是乱码了。","categories":[],"tags":[{"name":"H5","slug":"H5","permalink":"https://wonderfulxin.github.io/tags/H5/"}]},{"title":"markdown语法","slug":"hello-world","date":"2016-12-21T08:41:57.131Z","updated":"2016-12-26T09:27:37.849Z","comments":true,"path":"2016/12/21/hello-world/","link":"","permalink":"https://wonderfulxin.github.io/2016/12/21/hello-world/","excerpt":"","text":"摘要:markdown语法 正文:我的第一篇 斜体和粗体 斜体或斜体 粗体 加粗斜体 删除线 分级标题 一级标题 最大 二级标题 三级标题 四级标题 五级标题 六级标题","categories":[],"tags":[{"name":"其他","slug":"其他","permalink":"https://wonderfulxin.github.io/tags/其他/"}]}]}